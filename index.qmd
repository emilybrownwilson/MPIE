---
title: "MPIE Lecture 7: Analyzing survey data"
---

## Generating Coverage Indicators from Survey Data

### Load the child recode from Nigeria's 2013 DHS (NGKRAFL.DTA) into Stata or R: 
### R users may need to install/load libraries
R code:
```{r, eval=FALSE}
install.packages("readstata13")
install.packages("tidyverse")
install.packages("survey")
install.packages("freqtables")
```

### Step 5: explore variables 

Stata code:
```{r, eval=FALSE}
des m3*
  
ta m3a
ta m3b
ta m3c
```

R code:
```{r, eval=FALSE}
library(tidyverse)
data <- data %>% select(starts_with("m3"))
str(data)

table(data$m3a)
prop.table(table(data$m3a))
table(data$m3b)
prop.table(table(data$m3b))
table(data$m3c)
prop.table(table(data$m3c))
```

### Step 6: create SBA variable

Stata code:
```{r, eval=FALSE}
gen sba=0
replace sba=1 if m3a==1 | m3b==1 | m3c==1
replace sba=. if m3a==9
```

R code:
```{r, eval=FALSE}
data$sba <- 0
data$sba[data$m3a==1 | data$m3b==1 | data$m3c==1] <- 1
data$sba[data$m3a==9] <- NA
```

### Step 7: check SBA variable
Stata code:
```{r, eval=FALSE}
ta sba m3a, mi
```

R code:
```{r, eval=FALSE}
table(data$sba, data$m3a, exclude=NULL)
```

### Step 8: label variable
Stata code:
```{r, eval=FALSE}
la var sba
la def yn 1"Yes" 0"No"
la val sba yn
ta sba
```

R code:
```{r, eval=FALSE}
data$sba[data$sba==0] <- "No"
data$sba[data$sba==1] <- "Yes"
prop.table(table(data$sba))
```


## Design-based Analysis of Survey Data

### Step 3: svyset your data

Stata code:
```{r, eval=FALSE}
gen nwgt = v005/1000000
svyset v001 [pweight=nwgt], strata(v023) singleunit(centered)
```

R code:
```{r, eval=FALSE}
data$wt = data$v005/1000000
data <- data %>% filter(v023!=60) # Only 1 PSU in this cluster which is problem for svyby
svydata <- svydesign(id=~v001,strata=~v023, data=data, weights=~wt,nest=TRUE,survey.lonely.psu = "adjust")
```

### Step 4: Look at unweighted versus weighted proportions & run estimation

Stata code:
```{r, eval=FALSE}
tab v106
svy:tab v106

svy: prop sba

prop sba

estat effects
```

R code:
```{r, eval=FALSE}
prop.table(table(data$v106))
prop.table(svytable(~ v106, svydata) )

svyby(~sba, ~v000,  svydata, svymean, na.rm=TRUE)

data %>% filter(!is.na(sba)) %>% freq_table(sba)

svyby(~sba, ~v000,  svydata, svymean, na.rm=TRUE, deff="replace")
```


